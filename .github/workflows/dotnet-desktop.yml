# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build, test, sign, and package a WPF or Windows Forms
# desktop application built on .NET Core (.NET 8 compatible)

name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: your-solution-name                     # e.g. MyWpfApp.sln
      Test_Project_Path: your-test-project-path             # e.g. MyWpfApp.Tests\MyWpfApp.Tests.csproj
      Wap_Project_Directory: your-wap-project-directory     # e.g. MyWpfApp.Package
      Wap_Project_Path: your-wap-project-path               # e.g. MyWpfApp.Package\MyWpfApp.Package.wapproj

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Run unit tests
        run: dotnet test ${{ env.Test_Project_Path }}

      - name: Restore solution dependencies
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}

      - name: Decode PFX signing certificate
        shell: pwsh
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
          $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
          [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

      - name: Build and package app
        run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration `
          /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode `
          /p:AppxBundle=$env:Appx_Bundle `
          /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx `
          /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
        env:
          Appx_Bundle: Always
          Appx_Bundle_Platforms: x86|x64
          Appx_Package_Build_Mode: StoreUpload
          Configuration: ${{ matrix.configuration }}

      - name: Remove temporary PFX
        shell: pwsh
        run: Remove-Item -Path "$env:Wap_Project_Directory\GitHubActionsWorkflow.pfx" -Force

      - name: Upload MSIX package
        uses: actions/upload-artifact@v4
        with:
          name: MSIX Package
          path: ${{ env.Wap_Project_Directory }}\AppPackages
          if-no-files-found: warn
          retention-days: 30
          compression-level: 6
          overwrite: true
          include-hidden-files: false
